name: CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '24.8.0'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Run tests
        run: yarn test --passWithNoTests

      # Docker Build & Push (exemplo - descomentar se usar Docker Hub/GHCR)
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./docker/Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKER_USERNAME }}/pokearena:latest
      #       ${{ secrets.DOCKER_USERNAME }}/pokearena:${{ github.sha }}
      #     cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/pokearena:latest
      #     cache-to: type=inline

      # Deploy para Railway (exemplo)
      # - name: Deploy to Railway
      #   uses: bervProject/railway-deploy@main
      #   with:
      #     railway_token: ${{ secrets.RAILWAY_TOKEN }}
      #     service: pokearena-api

      # Deploy para Render (exemplo)
      # - name: Deploy to Render
      #   uses: johnbeynon/render-deploy-action@v0.0.8
      #   with:
      #     service-id: ${{ secrets.RENDER_SERVICE_ID }}
      #     api-key: ${{ secrets.RENDER_API_KEY }}

      # Deploy para Vercel (exemplo)
      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v25
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     vercel-args: '--prod'

      - name: Deployment success
        run: |
          echo "âœ… Build completed successfully!"
          echo "ðŸ“¦ Artifacts ready for deployment"
          echo "ðŸš€ Configure your deployment platform secrets to enable auto-deploy"
          echo ""
          echo "Supported platforms:"
          echo "  - Railway: Add RAILWAY_TOKEN"
          echo "  - Render: Add RENDER_SERVICE_ID and RENDER_API_KEY"
          echo "  - Vercel: Add VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID"
          echo "  - Docker Hub: Add DOCKER_USERNAME and DOCKER_PASSWORD"

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
